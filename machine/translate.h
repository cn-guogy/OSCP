// translate.h 
//	用于管理从虚拟页号到物理页号的转换的数据结构，
//	用于代表用户程序管理物理内存。
//
//	该文件中的数据结构是“双重用途”的 - 它们
//	既作为页表条目，也作为软件管理的转换后备缓冲区（TLB）中的条目。
//	无论哪种方式，每个条目的形式为：
//	<虚拟页号, 物理页号>.
//
// 请勿更改 -- 机器仿真的一部分
//


#ifndef TLB_H
#define TLB_H


#include "utility.h"

// 以下类定义了转换表中的一个条目 -- 可以是
// 在页表中或在TLB中。每个条目定义了从一个 
// 虚拟页到一个物理页的映射。
// 此外，还有一些额外的位用于访问控制（有效和 
// 只读）以及一些用于使用信息（使用和脏）。

class TranslationEntry {
  public:
    int virtualPage;  	// 虚拟内存中的页号。
    int physicalPage;  	// 真实内存中的页号（相对于
			//  "mainMemory"的起始位置）
    bool valid;         // 如果设置了此位，则忽略该转换。
			// （换句话说，条目尚未初始化。）
    bool readOnly;	// 如果设置了此位，则用户程序不允许
			// 修改该页的内容。
    bool use;           // 每次硬件引用或修改该页时设置此位。
    bool dirty;         // 每次硬件修改该页时设置此位。
};

#endif
